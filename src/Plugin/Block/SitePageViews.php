<?php

namespace Drupal\dyniva_matomo\Plugin\Block;

use Drupal\dyniva_matomo\Form\AnalyticsToolbarForm;

/**
 * Matomo Site page views.
 *
 * @Block(
 *  id = "dyniva_matomo_site_page_views",
 *  admin_label = @Translation("Matomo site page views"),
 * )
 */
class SitePageViews extends ToolbarWidgetBase {

  /**
   * {@inheritDoc}
   */
  public function getToolbar() {
    try {
      $entity = $this->getContextValue('entity');
    } catch (\Exception $e) {
      $entity = null;
    }
    $form = \Drupal::formBuilder()->getForm(AnalyticsToolbarForm::class, $entity);
    $id = $this->getWidgetId();
    $form['#attributes']['data-id'] = $id;
    $form['#attached']['drupalSettings']['dyniva_matomo']['params'][$id] = [
      'period' => $form['period']['#default_value'],
    ];
    $form['period']['#title'] = t('Granularity');
    unset($form['date']);
    unset($form['date1']);
    unset($form['date2']);
    unset($form['segment']);
    unset($form['idSite']);
    return $form;
  }

  /**
   * {@inheritDoc}
   */
  public function build() {
    $build = parent::build(); // TODO: Change the autogenerated stub
    $build['#content']['form'] = $this->getToolbar();
    $build['#content']['id'] = $this->getWidgetId();
    $build['#theme'] = 'dyniva_matomo_site_page_views';
    $build['#attached']['library'][] = 'dyniva_admin/echarts';
    return $build;
  }

  /**
   * {@inheritDoc}
   */
  public function getApiCallback() {
    return $this->configuration['api_callback'];
  }

  /**
   * {@inheritDoc}
   */
  public function getApiParams() {
    return [];
  }

  /**
   * {@inheritDoc}
   */
  public function getApiMethod() {
    return $this->configuration['api_method'];
  }

  /**
   * {@inheritDoc}
   */
  public function defaultConfiguration() {
    return [
      'api_callback' => 'dyniva_matomo_site_page_views_api_callback',
      'api_method' => 'MultiSites.getOne',
      'period' => 'day',
    ];
  }
}
