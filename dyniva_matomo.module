<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\matomo_reporting_api\MatomoQueryFactoryInterface;

/**
 * Implements hook_ENTITY_TYPE_presave().
 * @param EntityInterface $entity
 */
function dyniva_matomo_node_presave(EntityInterface $entity) {
  if($entity->bundle() == 'site') {
    /**
     * @var MatomoQueryFactoryInterface $matomoQueryFactory
     */
    $matomoQueryFactory = \Drupal::service('matomo.query_factory');
    if(empty($entity->matomo_site_id->value)) {
      $query = $matomoQueryFactory->getQuery('SitesManager.addSite');
      $query->setParameters([
        'siteName' => $entity->label(),
        'urls' => $entity->domain->value,
      ]);
      $response = $query->execute()->getResponse();
      if(!empty($response->value)) {
        $entity->matomo_site_id->value = $response->value;
      }
    }else {
      $query = $matomoQueryFactory->getQuery('SitesManager.updateSite');
      $query->setParameters([
        'idSite' => $entity->matomo_site_id->value,
        'siteName' => $entity->label(),
        'urls' => $entity->domain->value,
      ]);
      $response = $query->execute()->getResponse();
    }
  }
}
/**
 * Implements hook_theme().
 */
function dyniva_matomo_theme() {
  $result = [];
  $result['dyniva_matomo_real_time_visitor'] = [
    'template' => 'real-time-visitor',
    'render element' => 'elements',
  ];
  $result['dyniva_matomo_block_renderer'] = [
    'variables' => [
      'label' => '',
      'content' => [],
      'attributes' => [],
    ],
  ];

  $result['dyniva_matomo_block_real_time'] = [
    'variables' => [
      'label' => '',
      'content' => []
    ],
  ];

  $result['dyniva_matomo_latest_visits_summary'] = [
    'variables' => [
      'content' => []
    ],
  ];
  return $result;
}

/**
 * Implements hook_preprocess_html().
 */
function dyniva_matomo_preprocess_html(&$variables) {
  if(strpos(\Drupal::routeMatch()->getRouteName(), 'dyniva_matomo.') === 0) {
    $variables['attributes']['class'][] = 'dyniva-matomo';
  }
}
